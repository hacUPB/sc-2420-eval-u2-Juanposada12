#include <iostream>
#include <cstdio>
#include <chrono>
#include <thread>
#include <SDL.h>
#include <cmath> // Para el uso de sin y cos

// Estructura para almacenar la posición y tamaño de las figuras
struct Shape {
    int x, y;       // Posición
    int width, height; // Para el rectángulo
    int radius;     // Para el círculo
    double angle;   // Ángulo de rotación
    Uint8 r, g, b;  // Color
};

// Inicializar las figuras
Shape rectangle = { 50, 50, 100, 50, 0, 0, 255, 0 }; // Rectángulo (rojo)
Shape lineStart = { 300, 150 }; // Inicio de la línea
Shape lineEnd = { 500, 150 };   // Fin de la línea (verde)
Shape circle = { 400, 300, 0, 50, 0, 0, 255 }; // Círculo (azul)

void DrawCircle(SDL_Renderer* renderer, int centerX, int centerY, int radius) {
    for (int w = 0; w < radius * 2; w++) {
        for (int h = 0; h < radius * 2; h++) {
            int dx = radius - w; // distancia horizontal
            int dy = radius - h; // distancia vertical
            if ((dx * dx + dy * dy) <= (radius * radius)) {
                SDL_RenderDrawPoint(renderer, centerX + dx, centerY + dy);
            }
        }
    }
}

void Setup(SDL_Renderer*& renderer) {
    printf("Setup called\n");
}

void Update() {
    // Cambiar tamaño del rectángulo
    rectangle.width += 1;
    rectangle.height += 1;

    // Restringir el tamaño del rectángulo
    if (rectangle.width > 200) {
        rectangle.width = 100;
        rectangle.height = 50;
    }

    // Cambiar la orientación de la línea
    lineStart.x += 1;
    lineEnd.x += 1;

    // Rotar el rectángulo (simulando una orientación)
    rectangle.angle += 1.0; // Incrementar el ángulo

    // Cambiar el color de las figuras
    rectangle.r = (rectangle.r + 1) % 256; // Cambiar rojo
    rectangle.g = (rectangle.g + 2) % 256; // Cambiar verde
    rectangle.b = (rectangle.b + 3) % 256; // Cambiar azul

    // Mover el círculo
    circle.x += 1; // Mover el centro del círculo
    if (circle.x > 800) circle.x = -circle.radius; // Reiniciar posición
}

void Render(SDL_Renderer* renderer) {
    // Limpiar la pantalla
    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255); // Color negro
    SDL_RenderClear(renderer);

    // Dibuja un rectángulo
    SDL_SetRenderDrawColor(renderer, rectangle.r, rectangle.g, rectangle.b, 255); // Color del rectángulo
    SDL_Rect rect = { rectangle.x, rectangle.y, rectangle.width, rectangle.height };
    SDL_RenderFillRect(renderer, &rect); // Rellenar el rectángulo

    // Dibuja una línea
    SDL_SetRenderDrawColor(renderer, 0, 255, 0, 255); // Color verde
    SDL_RenderDrawLine(renderer, lineStart.x, lineStart.y, lineEnd.x, lineEnd.y);

    // Dibuja un círculo
    SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // Color azul
    DrawCircle(renderer, circle.x, 300, circle.radius); // Círculo en (x, 300)

    // Presentar la pantalla
    SDL_RenderPresent(renderer);
}

int main(int argc, char* argv[]) {
    // Inicializar SDL
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        printf("No se pudo inicializar SDL: %s\n", SDL_GetError());
        return 1;
    }

    // Crear ventana
    SDL_Window* window = SDL_CreateWindow("Modificación de Figuras", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 800, 600, 0);
    if (!window) {
        printf("No se pudo crear la ventana: %s\n", SDL_GetError());
        SDL_Quit();
        return 1;
    }

    // Crear renderer
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        printf("No se pudo crear el renderer: %s\n", SDL_GetError());
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }

    Setup(renderer);

    while (true) {
        Update();
        Render(renderer);

        // Comprobar si se ha presionado una tecla para salir
        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT) {
                goto exit; // Salir del bucle si se cierra la ventana
            }
        }

        std::this_thread::sleep_for(std::chrono::milliseconds(16));
    }

exit:
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit(); // Cerrar SDL
    return 0;
}
//Este programa crea una ventana de 800x600 píxeles en la que tres figuras (un rectángulo, una línea y un círculo) son animadas. Las animaciones incluyen el cambio de tamaño del rectángulo, la rotación del mismo (aunque no se refleja visualmente en el código actual), el cambio de color de las figuras, el movimiento de la línea y el movimiento del círculo, con la reinicialización de la posición del círculo al salir de la pantalla.

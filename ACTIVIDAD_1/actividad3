#include <iostream>
#include <cstdio>
#include <chrono>
#include <thread>
#include <SDL.h>

// Función para dibujar un círculo
void DrawCircle(SDL_Renderer* renderer, int centerX, int centerY, int radius) {
    for (int w = 0; w < radius * 2; w++) {
        for (int h = 0; h < radius * 2; h++) {
            int dx = radius - w; // distancia horizontal
            int dy = radius - h; // distancia vertical
            if ((dx * dx + dy * dy) <= (radius * radius)) {
                SDL_RenderDrawPoint(renderer, centerX + dx, centerY + dy);
            }
        }
    }
}

void Setup(SDL_Renderer*& renderer) {
    printf("Setup called\n");
}

void Update() {
    // Lógica del juego (vacía en este caso)
}

void Render(SDL_Renderer* renderer) {
    // Limpiar la pantalla
    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255); // Color negro
    SDL_RenderClear(renderer);

    // Dibuja un rectángulo
    SDL_SetRenderDrawColor(renderer, 255, 0, 0, 255); // Color rojo
    SDL_Rect rect = { 50, 50, 200, 100 };
    SDL_RenderFillRect(renderer, &rect); // Rellenar el rectángulo

    // Dibuja una línea
    SDL_SetRenderDrawColor(renderer, 0, 255, 0, 255); // Color verde
    SDL_RenderDrawLine(renderer, 300, 50, 500, 150); // Línea de (300, 50) a (500, 150)

    // Dibuja un círculo
    SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // Color azul
    DrawCircle(renderer, 400, 300, 50); // Círculo en (400, 300) con radio 50

    // Presentar la pantalla
    SDL_RenderPresent(renderer);
}

int main(int argc, char* argv[]) {
    // Inicializar SDL
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        printf("No se pudo inicializar SDL: %s\n", SDL_GetError());
        return 1;
    }

    // Crear ventana
    SDL_Window* window = SDL_CreateWindow("Figuras Geométricas", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 800, 600, 0);
    if (!window) {
        printf("No se pudo crear la ventana: %s\n", SDL_GetError());
        SDL_Quit();
        return 1;
    }

    // Crear renderer
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        printf("No se pudo crear el renderer: %s\n", SDL_GetError());
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }

    Setup(renderer);

    while (true) {
        Update();
        Render(renderer);

        // Comprobar si se ha presionado una tecla para salir
        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT) {
                goto exit; // Salir del bucle si se cierra la ventana
            }
        }

        std::this_thread::sleep_for(std::chrono::milliseconds(16));
    }

exit:
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit(); // Cerrar SDL
    return 0;
}

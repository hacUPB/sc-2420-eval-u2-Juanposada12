#include <iostream>
#include <cstdio>
#include <chrono>
#include <thread>
#include <SDL.h>

void Setup(SDL_Renderer*& renderer) {
    printf("Setup called\n");
}

void Update() {
    // Aquí iría la lógica de actualización del juego
}

void Render(SDL_Renderer* renderer) {
    // Limpiar la pantalla
    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255); // Color negro
    SDL_RenderClear(renderer);
    
    // Presentar la pantalla
    SDL_RenderPresent(renderer);
}

int main(int argc, char* argv[]) {
    // Inicializar SDL
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        printf("No se pudo inicializar SDL: %s\n", SDL_GetError());
        return 1;
    }

    // Crear ventana
    SDL_Window* window = SDL_CreateWindow("Detección de Teclado", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 800, 600, 0);
    if (!window) {
        printf("No se pudo crear la ventana: %s\n", SDL_GetError());
        SDL_Quit();
        return 1;
    }

    // Crear renderer
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (!renderer) {
        printf("No se pudo crear el renderer: %s\n", SDL_GetError());
        SDL_DestroyWindow(window);
        SDL_Quit();
        return 1;
    }

    Setup(renderer);

    bool running = true;
    while (running) {
        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT) {
                running = false; // Salir del bucle si se cierra la ventana
            }
            else if (event.type == SDL_KEYDOWN) {
                // Detectar teclas específicas al presionarlas
                switch (event.key.keysym.sym) {
                    case SDLK_w:
                        printf("Se presionó la tecla W\n");
                        break;
                    case SDLK_a:
                        printf("Se presionó la tecla A\n");
                        break;
                    case SDLK_s:
                        printf("Se presionó la tecla S\n");
                        break;
                    case SDLK_d:
                        printf("Se presionó la tecla D\n");
                        break;
                }
            }
            else if (event.type == SDL_KEYUP) {
                // Detectar teclas específicas al soltarlas
                switch (event.key.keysym.sym) {
                    case SDLK_w:
                        printf("Se soltó la tecla W\n");
                        break;
                    case SDLK_a:
                        printf("Se soltó la tecla A\n");
                        break;
                    case SDLK_s:
                        printf("Se soltó la tecla S\n");
                        break;
                    case SDLK_d:
                        printf("Se soltó la tecla D\n");
                        break;
                }
            }
        }

        Update();
        Render(renderer);
        std::this_thread::sleep_for(std::chrono::milliseconds(16));
    }

    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit(); // Cerrar SDL
    return 0;
}
//Este código demuestra cómo manejar eventos de teclado en un bucle de juego utilizando SDL, específicamente para detectar la presión de las teclas W, A, S, y D, y responder a esos eventos.

//Estructura:
//Inicialización: Se inicializa SDL, se crea una ventana y un renderer para gestionar la salida gráfica.
//Manejo de Eventos: En el bucle principal, se utiliza SDL_PollEvent() para obtener eventos, y se verifica si el evento es de tipo SDL_KEYDOWN, para detectar cuándo se presionan las teclas W, A, S, o D y mostrar un mensaje en la consola.
//Actualización y Renderizado: La función Update() está reservada para la lógica del juego (vacía en este caso). La función Render() limpia la pantalla y la presenta.
//Bucle de Juego: El bucle sigue ejecutándose hasta que el usuario cierra la ventana (SDL_QUIT), actualizando y renderizando la pantalla en cada ciclo.
//¿Qué hace el código?
//Detecta la presión de las teclas W, A, S, y D e imprime un mensaje en la consola para cada una.
//Utiliza SDL_PollEvent() y SDL_KEYDOWN para gestionar los eventos del teclado.
//Posibles Extensiones:
//Mover objetos en la pantalla usando las teclas.
//Detectar más teclas o combinaciones de teclas.
//Usar SDL_KEYUP para detectar cuándo se deja de presionar una tecla.
//Este código sirve como base para aprender a manejar entradas de teclado en un juego o aplicación con SDL.
